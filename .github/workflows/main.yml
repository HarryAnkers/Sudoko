name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ matrix.python-version }}
      
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']  # Define the Python versions to test
    
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment with the selected version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Restore Cache Poetry dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}

      # Install dependencies with Poetry
      - name: Install dependencies
        run: |
          poetry install --no-interaction

      # Cache Poetry dependencies
      - name: Save Cache Poetry dependencies
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}
  lint-ruff:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
      
      - name: Restore Cache Poetry dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}

      # Install dependencies with Poetry
      - name: Install dependencies
        run: |
          poetry install --no-interaction

      - name: Run Ruff linter
        run: |
          poetry run ruff check .

  lint-mypy:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
      
      - name: Restore Cache Poetry dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}

      # Install dependencies with Poetry
      - name: Install dependencies
        run: |
          poetry install --no-interaction

      - name: Run Mypy for type checking
        run: |
          poetry run mypy .

  test-pytest:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
      
      - name: Restore Cache Poetry dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}

      # Install dependencies with Poetry
      - name: Install dependencies
        run: |
          poetry install --no-interaction

      - name: Run Pytest for tests
        run: |
            poetry run pytest --maxfail=1 --disable-warnings -q --cov=src --cov-report=html --junitxml=reports/test-results.xml tests/

      # Upload the test coverage report
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: htmlcov/index.html  # Path to the HTML coverage report

      # Upload the test failure report (JUnit XML format)
      - name: Upload test failure report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results-{{ matrix.python-version }}
          path: reports/test-results.xml