name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ matrix.python-version }}
      
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]  # Define the Python versions to test
    
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment with the selected version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      # Install dependencies with Poetry
      - name: Install dependencies
        run: |
          poetry install --no-interaction

      # Cache Poetry dependencies
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

  lint-ruff:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-interaction

      - name: Run Ruff linter
        run: |
          poetry run ruff check .

  lint-mypy:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-interaction

      - name: Run Mypy for type checking
        run: |
          poetry run mypy .

  test-pytest:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-interaction

      - name: Run Pytest for tests
        run: |
          poetry run pytest --maxfail=1 --disable-warnings -q
